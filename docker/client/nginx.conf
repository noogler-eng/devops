# This is an Nginx configuration file designed for a Docker-based environment. 
# It handles static file serving for a React app and 
# sets up reverse proxying for backend APIs written in Golang and Node.js. 
# Let's break it down:

server {
  listen 8080;
  
  # Docker internal dns server
  # Uses Docker's internal DNS (127.0.0.11) to resolve service 
  # names dynamically within the Docker network
  resolver 127.0.0.11;
  
  # A simple health check endpoint (/ping) that returns "pong" with status 200 OK.
  # access_log off; prevents logging this request to reduce log noise.
  location /ping {
        access_log off;
        add_header 'Content-Type' 'text/plain';
        return 200 "pong";
  }

  # Routes all requests from /api/golang/ to the Golang API service 
  # running inside Docker at http://api-golang:8080/.
  # Uses proxy_pass to forward requests.
  location /api/golang/ {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;

        set $api_golang_upstream http://api-golang:8080/;
        proxy_pass $api_golang_upstream;
  }

  # Routes requests from /api/node/ to the Node.js 
  # API service at http://api-node:3000/.
  location /api/node/ {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;

        set $api_node_upstream http://api-node:3000/;
        proxy_pass $api_node_upstream;
  }

  # Serves React’s built files from /usr/share/nginx/html.
  # If the requested file does not exist, it falls back to index.html 
  # (important for React’s client-side routing).
  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
  }
  
  include /etc/nginx/extra-conf.d/*.conf;
}